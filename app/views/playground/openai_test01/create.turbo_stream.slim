= turbo_stream.update "form_area", partial: "form"

- if @message
  = turbo_stream.replace "result_area" do
    hr.border-1.opacity-75.mx-2 style="border-style:outset;margin:2rem 0;"

    - if Rails.env.development?
      .mx-auto.text-muted.small
        . = simple_format(h(@mai_search.wheres.to_s.strip))
        / . = simple_format(h(@mai_search.specs.to_s.strip))
        . = simple_format(h(@mai_search.spec_by_model))
        . 検索レベル:#{@mai_search.level} 処理時間:#{@time}sec 途中件数:#{number_with_delimiter(@mai_search.machines&.count)}件
        . = @error

    .row
      / エラー発生
      - if @error_mes.present?
        .ms-4.p-3.rounded-5.bg-danger.text-white.col-8
          | #{mi(:support_agent)} すいません。AIエラーが発生しました。<br /><br />
          | お手数ですが、再度検索をお願いいたします。<br />

      / 検索キーワードなし
      - elsif @mai_search.wheres.blank? || @mai_search.wheres.all? { |_, v| v.blank? }
        .ms-4.p-3.rounded-5.bg-warning.text-white.col-8
          | #{mi(:support_agent)} ご質問中に検索できるキーワードがありませんでした。<br /><br />
          | <strong>MAIからの検索ヒント</strong><br />
          | ご質問の内容に、「機械・工具名」「メーカー」「型式」や<br />
          |「年式」「能力値」「在庫場所(都道府県)」などを含めてみてください。

      / フィルタリング
      - elsif @mai_search.advice.blank? && @mai_search.filtering
        .ms-4.p-3.rounded-5.bg-warning.text-white.col-10
          | #{mi(:support_agent)}
          - if @mai_search.machines.blank?
            | ご質問、絞り込みにマッチする機械・工具はありませんでした。
          - else
            | ご質問マッチする機械・工具が多いためアドバイスが生成できませんでした。
            = " (約#{number_with_delimiter(@mai_search.count.floor(Math.log10(@mai_search.count).to_i * -1))}件)"

          h6.mt-2.fw-bold 条件を追加して、さらに絞り込む
          .p-3.rounded-3.bg-white.text-black.g-1
            = form_with url: "/playground/openai_test01", method: :post, data: { turbo_stream: true, action: "submit->mai-search#sendMessage" } do |f|
              = f.hidden_field :mai_search_log_id, value: @mai_search_log.id
              = f.hidden_field :message, value: @mai_search.message, data: { mai_search_target: "re_text" }, class: "re_message"
              - if @mai_search.filtering_makers.length > 1
                .ms-1.fw-bold.small #{mi(:business)} メーカー
                - @mai_search.filtering_makers.each_key do |k|
                  = f.check_box("f[maker]", { multiple: true, class: "btn-check", checked: @mai_search.filters[:maker]&.include?(k) }, k, nil)
                  = f.label "f[maker]", k, { value: k, class: "btn btn-outline-danger btn-sm m-1 rounded-pill py-0", style: "min-width:60px;" }

              - if @mai_search.filtering_addr1s.length > 1
                .ms-1.mt-1.fw-bold.small  #{mi(:pin_drop)} 在庫場所
                - @mai_search.filtering_addr1s.each_key do |k|
                  = f.check_box("f[addr1]", { multiple: true, class: "btn-check", checked: @mai_search.filters[:addr1]&.include?(k) }, k, nil)
                  = f.label "f[addr1]", k, { value: k, class: "btn btn-outline-primary btn-sm m-1 rounded-pill py-0", style: "min-width:78px;" }

              - if @mai_search.filtering_years.length.positive?
                .mt-1.ms-1.fw-bold.small #{mi(:calendar_month)} 年式
                - (1900..Time.current.year).step(10) do |year|
                  - if @mai_search.filtering_years.key?((year / 10).to_s)
                    = f.check_box("f[year]", { multiple: true, class: "btn-check", checked: @mai_search.filters[:year]&.include?(year.to_s) }, year, nil)
                    = f.label "f[year]", { value: year, class: "btn btn-outline-success btn-sm m-1 rounded-pill py-0", style: "min-width:78px;" } do
                      = year
                      small 年代

              - if @mai_search.filtering_capacities.length.positive?
                / .small.mt-1
                /   strong.small  #{mi(:filter_alt)} 能力
                -  @mai_search.filtering_capacities.keys.group_by { |k| [k[2], k[1]] }.each do |label, arr|
                  .mt-1.ms-1.fw-bold.small  #{mi(:build)} #{label[0]} (#{label[1]})
                  - arr.each do |k|
                    - cap = "#{number_with_precision(k[0], strip_insignificant_zeros: true)}#{k[1]}"
                    = f.check_box("f[capacity]", { multiple: true, class: "btn-check", checked: @mai_search.filters[:capacity]&.include?(cap) }, cap, nil)
                    = f.label "f[capacity]", cap, { value: cap, class: "btn btn-outline-dark btn-sm my-1 ms-1 rounded-2 p-0", style: "min-width:44px;" } do
                      = number_with_precision(k[0], strip_insignificant_zeros: true)
                      / small = k[1]
                / - @mai_search.filtering_capacities.each_key do |k|
                /   - cap = "#{number_with_precision(k[0], strip_insignificant_zeros: true)}#{k[1]}"
                /   = f.check_box("f[capacity]", { multiple: true, class: "btn-check", checked: @mai_search.filters[:capacity]&.include?(cap) }, cap, nil)
                /   = f.label "f[capacity]", cap, { value: cap, class: "btn btn-outline-dark btn-sm m-1 rounded-pill py-0", style: "min-width:48px;" } do
                /     = number_with_precision(k[0], strip_insignificant_zeros: true)
                /     small = k[1]

              .mt-3 = f.button type: :submit, id: :searchButton, value: :model, class: "btn btn-primary", data: { mai_search_target: "button" } do
                span.show-when-enabled #{mi(:search)} 絞り込み条件を追加して、再検索
                span.show-when-disabled
                  span.spinner-border.spinner-border-sm.me-2 role="status" aria-hidden="true"
                  | MAIが絞り込み再検索中

      / 検索結果なし
      - elsif @mai_search.machines.blank?
        .ms-4.p-3.rounded-5.bg-warning.text-white.col-8
          | #{mi(:support_agent)} ご質問にマッチする機械・工具はありませんでした。<br />
          | 質問文を変更して、より広い条件で再度検索してみてください。<br /><br />
          | <strong>MAIからの検索ヒント</strong><br />
          ul
            li 「大阪周辺」「関西で」など、周辺都道府県をまとめて検索できます。
            li メーカー、型式など「〇〇か□□か△△」のように複数まとめて検索できます。
            li 年式を「90年代」「2005年以降」のように範囲検索できます。

      / 検索結果多すぎ
      - elsif @mai_search.advice.blank?
        .ms-4.p-3.rounded-5.bg-warning.text-white.col-10
          | #{mi(:support_agent)} 質問マッチする機械・工具が多いためアドバイスが生成できませんでした。
          = " (約#{number_with_delimiter(@mai_search.count.floor(Math.log10(@mai_search.count).to_i * -1))}件)"
          | <br />ご質問に条件を追加して、絞り込みを行ってみてください。<br /><br />
          | <strong>MAIからの絞り込みヒント</strong><br />
          ul
            li より詳しい機械・工具名 : 「プレス」 -> 「油圧プレス」
            li 在庫場所 :「大阪にある滝沢の旋盤」
            li 能力値 : 「関東近郊にある、100Tか150Tの油圧プレス」
            li メーカー名 : 「マキノもしくはOKKの立フライス」
            li 年式 : 「90年代製の平面研削盤で、名古屋近辺にあるもの」

      / 検索結果
      - else
        .ms-4.p-3.rounded-5.bg-success.text-white.col-10
          . #{mi(:support_agent)} #{number_with_delimiter(@mai_search.adv_machines&.count)} 件 の機械・工具がマッチしました。

          - if @mai_search.advice.present?
            h6.mt-2.fw-bold MAIからの商品選定アドバイス
            .p-3.rounded-3.bg-white.text-black
              p == sanitize(@mai_search.advice.strip).gsub("\n", '<br>').gsub(/\[\[(.*?)\]\]/) { " <strong class='text-info'>#{Regexp.last_match(1)}</strong> " }.gsub(/\[(ID\s*:\s*([0-9]+).*?)\]/) { "<a href='/machines/#{Regexp.last_match(2)}?r=mai_src_rep' target='_blank' rel='noopener'>#{mi(:settings)} #{Regexp.last_match(1)}</a><a class='btn btn-xs btn-warning px-1 ms-1 me-2' data-turbo='false' target='_blank' rel='noopener' href='/contacts/new?r=mai_src_adv&m=#{Regexp.last_match(2)}'>#{mi(:forward_to_inbox)} 問合せ</a>" }

              / - ids = @mai_search.advice.scan(/ID\s*:\s*([0-9]+)/).flatten
              / - if ids.present?
              /   = link_to "/contacts/new?price=1&r=mai_src_adv_blk#{ids.map { |id| "&m[]=#{id}" }.join}", class: "mt-2 btn btn-md btn-warning", data: { turbo: false }, target: :_blank, rel: :noopener do
              /     . #{mi(:forward_to_inbox)} ここから、商品の金額を一括問い合わせができます。

        - if @mai_search_log.present?
          .row
            .my-2.small.text-end.col-10
              | #{mi(:support_agent)} MAIの検索結果・アドバイスは、ご満足いただけましたか？
              span id="good_area_#{@mai_search_log.id}" = render "good", mai_search_log: @mai_search_log

        .row
          .my-2.col-12.g-1
            - @mai_search.adv_machines.group_by(&:model2).each do |key, gm|
              - if key.present? && gm.length > 1
                = link_to "/contacts/new?r=mai_src_smd_blk#{gm.map { |ma| "&m[]=#{ma.id}" }.join}", class: "m-1 mt-y btn btn-md btn-warning", data: { turbo: false }, target: :_blank, rel: :noopener do
                  . #{mi(:forward_to_inbox)} #{gm.first.model} <span class="small">(#{gm.size}件)に一括問合せ</span>
        . data-controller="mai-search-sort"
          .row
            .col-auto.my-2
              .fw-bold.small.mx-2.d-inline-block #{mi(:swap_vert)} 検索結果のソート
              .btn-group.btn-group-sm
                = radio_button_tag(:sort, nil, { class: "btn-check", checked: true, data: { action: "change->mai-search-sort#call", attr: :model } })
                = label_tag :sort_, class: "btn btn-outline-info btn-sm px-3" do
                  | #{mi(:abc)} 型式順
                - @mai_search.spec_labels.each_with_index do |k, i|
                  = radio_button_tag(:sort, "spec#{i}", { class: "btn-check", data: { action: "change->mai-search-sort#call", attr: "spec#{i}" } })
                  = label_tag "sort_spec#{i}", class: "btn btn-outline-info btn-sm px-3" do
                    | #{mi(:build)} #{k}順

                = radio_button_tag(:sort, :year, { class: "btn-check", data: { action: "change->mai-search-sort#call", attr: :year } })
                = label_tag :sort_year, class: "btn btn-outline-info btn-sm px-3" do
                  | #{mi(:calendar_month)} 年式順
                = radio_button_tag(:sort, :created_at, { class: "btn-check", data: { action: "change->mai-search-sort#call", attr: :news } })
                = label_tag :sort_created_at, class: "btn btn-outline-info btn-sm px-3" do
                  | #{mi(:info_outline)} 新着順
                / = radio_button_tag(:sort, :access, { class: "btn-check", data: { action: "change->mai-search-sort#call", attr: :access } })
                / = label_tag :sort_access, class: "btn btn-outline-info btn-sm px-3" do
                /   | #{mi(:star)} 人気順

          / 検索結果一覧
          .row data-mai-search-sort-target="machines"
            - @mai_search.adv_machines.each do |ma|
              - attrs = { style: "width:20%;", data: { model: ma.model2, year: ma.year, news: ma.created_at.strftime("%Y%m%d%H%M") } }
              - @mai_search.specs[ma.id]&.each_with_index do |v, i|
                - attrs[:data]["spec#{i}"] = v
              .col-1.p-1.pb-2.machine*attrs

                = render partial: "/machines/card", locals: { machine: ma, titles: [ma.maker2, ma.name, ma.model, ma.myear, ma.addr1, ma.addr2], r: :mai_src }

                / 能力枠
                - if @mai_search.specs[ma.id]
                  .text-white.bg-info.small.px-2.py-1.z-3.position-relative.rounded-bottom-1.border.border-1.border-dark.border-top-0.shadow-sm style="margin-top:-6px;"
                    - @mai_search.specs[ma.id].each_with_index do |v, i|
                      - if v.present?
                        . #{@mai_search.spec_labels[i]}: #{v}
